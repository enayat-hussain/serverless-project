const organizationalSettingsData = [
  {
    features: [
      'client',
      'user',
      'user_group',
      'customer_account',
      'transfer_ownership',
      'property',
      'zone',
      'gateway',
      'device',
      'device_modal',
      'dashboard',
      'alert_threshold',
      'notification_setting',
      'fuota',
      'firmware',
      'lns_configurations',
    ],
    endDeviceTypes: JSON.stringify({
      KEG: 'keg',
      PUCK: 'puck',
      CAMERA: 'camera',
      TRACKER: 'tracker',
      PROGRAMMER: 'programmer',
      ALARM_SIREN: 'alarm_siren',
      GATE_SENSOR: 'gate_sensor',
      LEAK_SENSOR: 'leak_sensor',
      CONTROL_PANEL: 'control_panel',
      MULTISENSE_HUB: 'multisense_hub',
      MECHANICAL_VALVE: 'mechanical_valve',
      ROPE_LEAK_SENSOR: 'rope_leak_sensor',
      TREE_TILT_SENSOR: 'tree_tilt_sensor',
      VALVE_CONTROLLER: 'valve_controller',
      TEMPERATURE_SENSOR: 'temperature_sensor',
      SHOPPER_TRAFFIC_COUNTER: 'shopper_traffic_counter',
      PENDANT: 'pendant',
      BEACON: 'beacon',
      RAK: 'rak',
      SINGLE_BUTTON_DEVICE: 'single_button_device',
      SINGLE_CHANNEL_RELAY: 'single_channel_relay',
      '4_CHANNEL_RELAY': '4_channel_relay',
      QUAD_CHANNEL_RELAY: 'quadChannelRelay',
      SMART_ROOM_SENSOR: 'smart_room_sensor',
      RESIDENTIAL_METHANE_DETECTOR: 'residential_methane_detector',
      BROWAN_WATER_LEAK_SENSOR: 'browan_water_leak_sensor',
      DRAGINO_WATER_LEAK_SENSOR: 'dragino_water_leak_sensor',
      BROWAN_DOOR_WINDOW_SENSOR: 'browan_door_window_sensor',
      BROWAN_PIR_SENSOR: 'browan_pir_sensor',
      BROWAN_SOUND_LEVEL_SENSOR: 'browan_sound_level_sensor',
      BROWAN_TEMP_HUMIDITY_SENSOR: 'browan_temp_humidity_sensor',
      BROWAN_AMBIENT_LIGHT_SENSOR: 'browan_ambient_light_sensor',
    }),
    alertTypes: JSON.stringify({
      LEAK: 'leak',
      GATE_OPEN: 'gate_open',
      LOW_BATTERY: 'low_battery',
      GATEWAY_DOWN: 'gateway_down',
      SENSOR_ERROR: 'sensor_error',
      CAMERA_ONLINE: 'camera_online',
      LEAK_DETECTED: 'leak_detected',
      CAMERA_OFFLINE: 'camera_offline',
      END_DEVICE_DOWN: 'end-device_down',
      LOW_TEMPERATURE: 'low_temperature',
      HIGH_TEMPERATURE: 'high_temperature',
      SENSOR_DISCONNECTED: 'sensor_disconnected',
      LOW_BEER_PERCENTAGE: 'low_beer_percentage',
      VALVE_MANUALLY_SHUT: 'valve_manually_shut',
      VALVE_MANUALLY_OPENED: 'valve_manually_opened',
      TILT_SENSOR_THRESHOLD_CROSSED: 'tilt_sensor_threshold_crossed',
      METHANE_LEL_THRESHOLD_CROSSED: 'methane_lel_threshold_crossed',
      MELEL_ONE: 'melel_one',
      MELEL_THREE: 'melel_three',
      MELEL_EIGHT: 'melel_eight',
      MELEL_TEN: 'melel_ten',
      MELEL_TWENTY: 'melel_twenty',
      END_DEVICE_OFFLINE: 'end_device_offline',
      VALVE_CLOSE: 'valve_close',
      DEAD_BATTERY: 'dead_battery',
      CRITICAL_BATTERY: 'critical_battery',
      METAL_SHORT_DETECTED: 'metal_short_detected',
      DEVICE_END_OF_LIFE: 'device_end_of_life',
      AMBIENT_LIGHT_ON_DETECTED: 'ambient_light_on_detected',
      AMBIENT_LIGHT_OFF_DETECTED: 'ambient_light_off_detected',
      GATEWAY_ONLINE: 'gateway_online',
      GATEWAY_OFFLINE: 'gateway_offline',
    }),
    dashboardTabs: JSON.stringify({
      BARS: 'bars',
      NOTE: 'note',
      USER: 'user',
      ZONE: 'zone',
      ALERT: 'alert',
      LABEL: 'label',
      MODEL: 'model',
      CLIENT: 'client',
      DEVICE: 'device',
      BREWERY: 'brewery',
      GATEWAY: 'gateway',
      PRODUCT: 'product',
      PROJECT: 'project',
      CUSTOMER: 'customer',
      TRACKER: 'tracker',
      ACTIVITY: 'activity',
      DIAGNOSIS: 'diagnosis',
      PROPERTY: 'property',
      SETTINGS: 'settings',
      CHECKLIST: 'checklist',
      DASHBOARD: 'dashboard',
      ADD_DEVICE: 'add_device',
      ANNOTATION: 'annotation',
      USER_GROUP: 'user_group',
      ADD_GATEWAY: 'add_gateway',
      CREDENTIALS: 'credentials',
      ALERT_TYPES: 'alert_types',
      OTA_UPDATES: 'ota_updates',
      ANNOTATION_TYPE: 'annotation_type',
      CROWN_CASTLE_PWA: 'crown_castle_pwa',
      PROGRAMMING_TIME: 'programming_time',
      MONITOR_INVENTORY: 'monitor_inventory',
      OTA_IMAGE_LIBRARY: 'ota_image_library',
      BARS_AND_BREWERIES: 'bars_and_breweries',
      LNS_CONFIG: 'lns_config',
      FUOTA_DEVICE_TYPE: 'fuota_device_type',
      END_DEVICE: 'end_device',
      SENSOR_INVENTORY: 'sensor_inventory',
      INVENTORY: 'inventory',
      ORDERS: 'orders',
      DIAGNOSTIC_LOGS: 'diagnostic_logs',
      ZFLO_ADMINS: 'zflo_admins',
      ZFLO_COMPANY_ADMINS: 'zflo_company_admins',
      END_CUSTOMERS: 'end_customers',
      ALERT_CONFIGURATIONS: 'alert_configurations',
      NOTIFICATION_SETTING: 'notification_setting',
      COMPANIES: 'companies',
    }),
    treeTypes: JSON.stringify({
      DECIDUOUS_BROADLEAF: 'deciduous_broadleaf',
      EVERGREEN_CONIFER: 'evergreen_conifer',
    }),
    userRoles: JSON.stringify({
      oxit: ['administrator', 'read_only'],
      client: ['administrator', 'owner', 'distributor', 'read_only'],
      customer: ['user', 'owner', 'manager', 'administrator'],
    }),
    createdAt: new Date(),
    updatedAt: new Date(),
  },
];

module.exports = organizationalSettingsData;
